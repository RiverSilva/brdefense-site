<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Php on BR Defense Center</title><link>https://brdefense.center/tags/php/</link><description>Recent content in Php on BR Defense Center</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Wed, 29 Oct 2025 13:01:23 -0300</lastBuildDate><atom:link href="https://brdefense.center/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Aumento de Ataques Automatizados a Servidores PHP e Dispositivos IoT</title><link>https://brdefense.center/news/aumento-de-ataques-automatizados-a-servidores-php/</link><pubDate>Wed, 29 Oct 2025 13:01:23 -0300</pubDate><guid>https://brdefense.center/news/aumento-de-ataques-automatizados-a-servidores-php/</guid><description>&lt;p>Pesquisadores em cibersegurança alertam para um aumento significativo de ataques automatizados direcionados a servidores PHP, dispositivos IoT e gateways de nuvem, realizados por botnets como Mirai, Gafgyt e Mozi. Segundo o relatório da Qualys Threat Research Unit, os servidores PHP se tornaram alvos principais devido ao uso generalizado de sistemas de gerenciamento de conteúdo, como WordPress e Craft CMS, que frequentemente apresentam vulnerabilidades conhecidas e configurações inadequadas. Entre as falhas exploradas estão CVE-2017-9841, CVE-2021-3129 e CVE-2022-47945, que permitem execução remota de código. Além disso, os atacantes estão utilizando strings de consulta específicas para iniciar sessões de depuração, o que pode expor dados sensíveis. A Qualys também observou que as tentativas de exploração frequentemente se originam de infraestruturas de nuvem, como AWS e Google Cloud, evidenciando como serviços legítimos estão sendo usados para encobrir atividades maliciosas. A empresa recomenda que os usuários mantenham seus dispositivos atualizados, removam ferramentas de desenvolvimento em ambientes de produção e restrinjam o acesso público à infraestrutura de nuvem. A nova botnet AISURU, classificada como TurboMirai, é capaz de lançar ataques DDoS superiores a 20 Tbps, destacando a evolução das ameaças cibernéticas atuais.&lt;/p></description></item><item><title>Nova estratégia de malware utiliza funções dinâmicas e cookies para ocultação</title><link>https://brdefense.center/news/nova-estrategia-de-malware-utiliza-funcoes-dinamic/</link><pubDate>Thu, 23 Oct 2025 18:57:36 -0300</pubDate><guid>https://brdefense.center/news/nova-estrategia-de-malware-utiliza-funcoes-dinamic/</guid><description>&lt;p>Pesquisadores de segurança da Wordfence analisaram uma nova cepa de malware que utiliza a capacidade de funções variáveis do PHP e cookies para obfuscação sofisticada, dificultando a detecção. Embora a técnica não seja nova, ela evolui constantemente e é prevalente em ataques direcionados a ambientes WordPress. Em setembro de 2025, foram registradas mais de 30.000 detecções desse tipo de malware, todas bloqueadas pelas assinaturas de malware da Wordfence.&lt;/p>
&lt;p>O malware se aproveita da funcionalidade de &amp;lsquo;funções variáveis&amp;rsquo; do PHP, permitindo que nomes de funções sejam armazenados em variáveis e executados dinamicamente. Isso facilita a execução de comandos arbitrários, tornando a detecção mais difícil, especialmente quando os nomes das funções são construídos de forma dinâmica. Além disso, a análise revelou que esses malwares frequentemente utilizam cookies para acionar a execução de scripts, dependendo da presença de um número específico de cookies e marcadores.&lt;/p></description></item><item><title>Armas de Sites WordPress Através de Injeções Maliciosas em PHP</title><link>https://brdefense.center/news/armas-de-sites-wordpress-atraves-de-injecoes-malic/</link><pubDate>Tue, 07 Oct 2025 13:01:52 -0300</pubDate><guid>https://brdefense.center/news/armas-de-sites-wordpress-atraves-de-injecoes-malic/</guid><description>&lt;p>Uma recente campanha de malware tem comprometido sites WordPress ao injetar funções PHP maliciosas que carregam JavaScript controlado por atacantes, afetando a sessão de todos os visitantes. A violação foi identificada em um pequeno trecho de código adicionado ao arquivo functions.php do tema ativo, mostrando como pequenas modificações podem ter um grande impacto. O código injetado utiliza hooks do WordPress para ser executado em cada carregamento de página, contatando silenciosamente um servidor de comando e controle para baixar cargas maliciosas.&lt;/p></description></item></channel></rss>