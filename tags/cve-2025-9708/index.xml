<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cve-2025-9708 on BR Defense Center</title><link>https://brdefense.center/tags/cve-2025-9708/</link><description>Recent content in Cve-2025-9708 on BR Defense Center</description><generator>Hugo</generator><language>pt-br</language><lastBuildDate>Wed, 17 Sep 2025 07:00:07 -0300</lastBuildDate><atom:link href="https://brdefense.center/tags/cve-2025-9708/index.xml" rel="self" type="application/rss+xml"/><item><title>Vulnerabilidade no Cliente C do Kubernetes Expõe Comunicações a Ataques MiTM</title><link>https://brdefense.center/news/vulnerabilidade-no-cliente-c-do-kubernetes-expoe-c/</link><pubDate>Wed, 17 Sep 2025 07:00:07 -0300</pubDate><guid>https://brdefense.center/news/vulnerabilidade-no-cliente-c-do-kubernetes-expoe-c/</guid><description>&lt;p>Uma vulnerabilidade de alta severidade foi descoberta na biblioteca cliente C# do Kubernetes, comprometendo a integridade das comunicações com o servidor API e abrindo espaço para ataques do tipo man-in-the-middle (MiTM). Identificada como CVE-2025-9708, a falha resulta de uma validação inadequada de certificados no modo de Autoridade Certificadora (CA) personalizada. O cliente aceita qualquer certificado assinado pela CA fornecida, sem verificar a cadeia de confiança completa. Isso permite que atacantes apresentem certificados falsificados e interceptem ou manipulem o tráfego sensível do plano de controle. A vulnerabilidade afeta todas as versões do cliente C# do Kubernetes até a versão 17.0.13, especialmente em ambientes que utilizam certificados CA personalizados. Embora a falha tenha um escore CVSS de 6.8, indicando uma severidade média, ela representa um risco significativo em ambientes de desenvolvimento e produção. O projeto Kubernetes já lançou uma correção na versão 17.0.14, e recomenda-se que os usuários atualizem imediatamente. Enquanto isso, uma solução temporária é mover os certificados CA personalizados para o armazenamento de confiança do sistema, embora isso amplie a confiança para todos os processos no host. As equipes devem auditar arquivos kubeconfig e monitorar logs para detectar possíveis explorações.&lt;/p></description></item></channel></rss>